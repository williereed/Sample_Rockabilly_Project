
using System;
using System.Collections.Generic;
using Rockabilly.CoarseGrind.Descriptions;
using Rockabilly.Common;

namespace Rockabilly.CoarseGrind.Examples
{
	public class DemoExample : Test
	{

		public override string DetailedDescription
		{
			get
			{
				return "This test shows off Coarse Grind's demo features.";
			}
		}

		public override void PerformTest()
		{
			// This would be where you actually perform the test.  What a surprise, huh?
			// If setup fails, it will NOT be run.

			// Probably put these in a different namespace but in the Test class.
			Present.MessageBox("This is a test", new MessageBackground().DecodedImage, VerticalJustification.BOTTOM, HorizontalJustification.RIGHT, new DemoLogo().DecodedImage);
			WaitSeconds(30);
		}

		public override bool Cleanup()
		{
			// This will ALWAYS be run, even if setup failed.
			return true;
		}

		public override string Identifier
		{
			get
			{
				// This can be anything but is typically a number generated by a test case management system.
				// It is generally easier to say that "Test ST7 failed" than "The string-based selection upper limit test failed."
				return "DMO";
			}
		}


		public override string Name
		{
			get
			{
				// This should be a human-readable name that describes the test in-brief
				return "Sample Test ONE";
			}
		}

		public override bool Setup()
		{
			// Perform any test case specific setup.
			// If this does not return true, performTest() will never be run.
			// You may wish to make an abstract class that extends TestCase.
			// Lots of testcases could extend that and share the same setup(),
			// cleanup(), and other common methods.
			return true;
		}

		public override string[] TestSuiteMemberships
		{
			get
			{
				return new String[] { "Demo", "All" };
			}
		}

		public override string[] TestCategoryMemberships
		{
			get
			{
				return new String[] { "Example" };
			}
		}

	}
}